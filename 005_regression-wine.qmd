---
title: "Regression - Wine Quality"
author: "Muhammad Apriandito"
format: html
editor: visual
---

### Setup

```{r}
# Set Parameter
set.seed(123)
options(scipen = 10000)
```

### Load Packages

```{r}
# Load Packages
library(tidyverse)
library(tidymodels)
library(janitor)
library(skimr)
library(nnet)
```

### Load Data

```{r}
# Load Packages
library(tidyverse)

# Load Data
df <- read_csv("data/wine.csv")
```

```{r}
# Show Data
df
```

```{r}
# Show Sample Value for Each Variables
glimpse(df)
```

```{r}
# Show Data Summary
skim(df)
```

### Data Exploration

```{r}
# Show Wine Quality Distribution
df %>% 
  ggplot(aes(x = quality)) +
  geom_histogram(fill = "#00c0c5") +
  theme_minimal()
```

### Construct the Regression Model

#### Split Data

```{r}
# Split Data into 70% Training Data and 30% Testing Data
df_split <- initial_split(df, prop = 0.7)
```

```{r}
# Show Data Proportion
df_split
```

#### Define Data Processing Flow

```{r}
# Define Data Processing Flow
df_recipe <- training(df_split) %>%
  recipe(quality ~ .) %>%
  prep()
df_recipe
```

#### Modeling

Check available models at <https://www.tidymodels.org/find/parsnip/>

##### Linear Regression

```{r}
# Define the Regression Algorithm - Linear Regression
lr <- linear_reg() %>%
  set_engine("lm")
```

```{r}
# Create Model Workflow 
workflow_lr <- workflow() %>%
  add_model(lr) %>%
  add_recipe(df_recipe)
```

```{r}
# Train Model
model_lr <- fit(workflow_lr, training(df_split))
model_lr
```

##### Modeling (Neural Network)

```{r}
# Define the Regression Algorithm - Neural Network
nn <- mlp() %>% 
  set_engine("nnet") %>% 
  set_mode("regression")
```

```{r}
# Create Model Workflow 
workflow_nn <- workflow() %>%
  add_model(nn) %>%
  add_recipe(df_recipe)
```

```{r}
# Train Model
model_nn <- fit(workflow_nn, training(df_split))
model_nn
```

#### Model Evaluation

```{r}
# Define Metrics to Evaluate the Model
multi_metrics <- metric_set(rmse, mape, rsq)
```

```{r}
# Measure Model Performance
model_lr %>%
  predict(testing(df_split)) %>%
  bind_cols(testing(df_split)) %>%
  multi_metrics(truth = quality, estimate = .pred)
```

```{r}
# Measure Model Performance
model_nn %>%
  predict(testing(df_split)) %>%
  bind_cols(testing(df_split)) %>%
  multi_metrics(truth = quality, estimate = .pred)
```

#### Make Prediction

```{r}
# Create a New Data
df_new <- tibble(
  fixed_acidity = 7.4,
  volatile_acidity = 0.700,
  citric_acid = 0.04,
  residual_sugar = 1.9,
  chlorides = 0.076,
  free_sulfur_dioxide = 11,
  total_sulfur_dioxide = 34,
  density = 0.9978,
  ph = 3.51, 
  sulphates = 0.56 , 
  alcohol = 9.4
) 
```

```{r}
# Predict the New Data
model_lr %>%
  predict(df_new) %>%
  round()
```
